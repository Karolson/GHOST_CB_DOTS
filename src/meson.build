ghost_src = [
    'bncsutilinterface.cpp',
    'bncsutilinterface.h',
    'bnet.cpp',
    'bnet.h',
    'bnetprotocol.cpp',
    'bnetprotocol.h',
    'bnlsclient.cpp',
    'bnlsclient.h',
    'bnlsprotocol.cpp',
    'bnlsprotocol.h',
    'commandpacket.cpp',
    'commandpacket.h',
    'config.cpp',
    'config.h',
    'crc32.cpp',
    'crc32.h',
    'csvparser.cpp',
    'csvparser.h',
    'game_admin.cpp',
    'game_admin.h',
    'game_base.cpp',
    'game_base.h',
    'game.cpp',
    'game.h',
    'gameplayer.cpp',
    'gameplayer.h',
    'gameprotocol.cpp',
    'gameprotocol.h',
    'gameslot.cpp',
    'gameslot.h',
    'gcbiprotocol.cpp',
    'gcbiprotocol.h',
    'ghost.cpp',
    'ghostdb.cpp',
    'ghostdb.h',
    'ghostdbmysql.cpp',
    'ghostdbmysql.h',
    'ghostdbsqlite.cpp',
    'ghostdbsqlite.h',
    'ghost.h',
    'gpsprotocol.cpp',
    'gpsprotocol.h',
    'includes.h',
    'language.cpp',
    'language.h',
    'map.cpp',
    'map.h',
    'next_combination.h',
    'packed.cpp',
    'packed.h',
    'replay.cpp',
    'replay.h',
    'savegame.cpp',
    'savegame.h',
    'sha1.cpp',
    'sha1.h',
    'socket.cpp',
    'socket.h',
    'stats.cpp',
    'statsdota.cpp',
    'statsdota.h',
    'stats.h',
    'statsw3mmd.cpp',
    'statsw3mmd.h',
    'statusbroadcaster.cpp',
    'statusbroadcaster.h',
    'userinterface.cpp',
    'userinterface.h',
    'util.cpp',
    'util.h',
]

ghost_deps = [
    lib_bncsutil,
    lib_storm,
    lib_sqlite3,
    lib_mysql,
    lib_curses,
    dependency('threads'),
]

if host_machine.system() == 'windows'
    ghost_deps += [
        compiler.find_library('ws2_32'),
        compiler.find_library('uuid'),
        compiler.find_library('winmm'),
        compiler.find_library('version'),
        compiler.find_library('crypt32'),
        compiler.find_library('secur32'),
        compiler.find_library('wininet'),
        compiler.find_library('shlwapi'),
    ]
    if compiler.get_id() != 'msvc'
        ghost_deps += compiler.find_library('ssp')
    endif
endif

executable(
    'ghost',
    ghost_src,
    dependencies        : ghost_deps,
    include_directories : incdir,
    cpp_args            : '-DGHOST_MYSQL',
    install             : true,
    install_dir         : '',
)